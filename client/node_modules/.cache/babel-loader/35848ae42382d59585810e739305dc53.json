{"ast":null,"code":"var _jsxFileName = \"/Users/kevinkorza/Desktop/26-Stu_Actions-Reducers/Unsolved/client/src/components/CategoryMenu/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  // const [state, dispatch] = useStoreContext();\n  const state = useSelecto;\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryMenu, \"SeheJNtN0R8V7AC9zHt9HoJqmT0=\", false, function () {\n  return [useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useSelector","useDispatch","CategoryMenu","state","useSelecto","categories","loading","data","categoryData","dispatch","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"sources":["/Users/kevinkorza/Desktop/26-Stu_Actions-Reducers/Unsolved/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nfunction CategoryMenu() {\n  // const [state, dispatch] = useStoreContext();\n  const state = useSelecto\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AACA,SACEC,iBAAiB,EACjBC,uBAAuB,QAClB,qBAAqB;AAC5B,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,SAASC,YAAY,GAAG;EAAA;EACtB;EACA,MAAMC,KAAK,GAAGC,UAAU;EAExB,MAAM;IAAEC;EAAW,CAAC,GAAGF,KAAK;EAE5B,MAAM;IAAEG,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGb,QAAQ,CAACG,gBAAgB,CAAC;EAElEJ,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,EAAE;MAChBC,QAAQ,CAAC;QACPC,IAAI,EAAEd,iBAAiB;QACvBS,UAAU,EAAEG,YAAY,CAACH;MAC3B,CAAC,CAAC;MACFG,YAAY,CAACH,UAAU,CAACM,OAAO,CAAEC,QAAQ,IAAK;QAC5Cb,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEa,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACN,OAAO,EAAE;MACnBP,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACc,IAAI,CAAER,UAAU,IAAK;QACnDI,QAAQ,CAAC;UACPC,IAAI,EAAEd,iBAAiB;UACvBS,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACG,YAAY,EAAEF,OAAO,EAAEG,QAAQ,CAAC,CAAC;EAErC,MAAMK,WAAW,GAAIC,EAAE,IAAK;IAC1BN,QAAQ,CAAC;MACPC,IAAI,EAAEb,uBAAuB;MAC7BmB,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,EAC1BV,UAAU,CAACY,GAAG,CAAEC,IAAI,iBACnB;MAEE,OAAO,EAAE,MAAM;QACbJ,WAAW,CAACI,IAAI,CAACC,GAAG,CAAC;MACvB,CAAE;MAAA,UAEDD,IAAI,CAACE;IAAI,GALLF,IAAI,CAACC,GAAG;MAAA;MAAA;MAAA;IAAA,QAOhB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAjDQjB,YAAY;EAAA,QAMqBP,QAAQ;AAAA;AAAA,KANzCO,YAAY;AAmDrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}